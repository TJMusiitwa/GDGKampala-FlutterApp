def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def googlemap_key = localProperties.getProperty('googlemap_key')
if (googlemap_key == null) {
    throw new GradleException("Google Map API Key not set. Define location with googlemap.key in the local.properties file.")
}

// def getGoogleMapApiKey(){
//     def googlemap_api_key = System.getenv("GOOGLE_MAP_APIKEY")
//     if(googlemap_api_key == null || googlemap_api_key.length() == 0){
//     def apiKeysFile = file("apikey.properties")
//     def apiKeysProperties = new Properties()
//     apiKeysProperties.load(new FileInputStream(apiKeysFile))
//     googlemap_api_key = apiKeysProperties['GOOGLE_MAP_APIKEY']
//     if (googlemap_api_key == null) {
//             logger.error("You need to either place appropriate keys.properties or set proper environment variables for API key")
//         }

//     }
//     return googlemap_api_key
// }

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        //manifestPlaceholders = [googlemap_key:getLocalProperty("googlemap.key")]
        manifestPlaceholders = [googlemap_key:"$googlemap_key"]

        applicationId "com.jonathanmusiitwa.google_dev_group_kampala"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig signingConfigs.debug
            // buildConfigField("String", "Google_Map_API_Key",getGoogleMapApiKey())
        }

        // debug {
        //     buildConfigField("String", "Google_Map_API_Key",getGoogleMapApiKey())

        // }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    // add the Firebase SDK for Google Analytics
  implementation 'com.google.firebase:firebase-analytics:17.2.0'
  implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
  implementation 'com.google.firebase:firebase-firestore:21.3.1'

}

apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'